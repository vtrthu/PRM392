// Generated by view binder compiler. Do not edit!
package com.example.aviatorcrash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aviatorcrash.R;
import com.example.aviatorcrash.game.GameView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final MaterialButton bet10mButton;

  @NonNull
  public final MaterialButton bet1mButton;

  @NonNull
  public final MaterialButton bet5mButton;

  @NonNull
  public final MaterialButton betAllinButton;

  @NonNull
  public final EditText betAmountInput;

  @NonNull
  public final LinearLayout betInfoContainer;

  @NonNull
  public final LinearLayout bettingControls;

  @NonNull
  public final RecyclerView botLeaderboardRecycler;

  @NonNull
  public final CardView bottomHud;

  @NonNull
  public final MaterialButton cashoutButton;

  @NonNull
  public final ImageButton collapseLeaderboardButton;

  @NonNull
  public final TextView crashPointText;

  @NonNull
  public final TextView currentBetText;

  @NonNull
  public final LinearLayout educationalIndicators;

  @NonNull
  public final TextView enrollmentCountdownText;

  @NonNull
  public final MaterialCardView enrollmentDeadlineCard;

  @NonNull
  public final ConstraintLayout gameArea;

  @NonNull
  public final LinearLayout gameControls;

  @NonNull
  public final TextView gameStatus;

  @NonNull
  public final GameView gameView;

  @NonNull
  public final CardView leaderboardCard;

  @NonNull
  public final TextView multiplierText;

  @NonNull
  public final MaterialButton nextRoundButton;

  @NonNull
  public final MaterialButton placeBetButton;

  @NonNull
  public final CardView statusCard;

  @NonNull
  public final CardView topHud;

  @NonNull
  public final TextView totalLossText;

  @NonNull
  public final TextView tuitionAmountText;

  @NonNull
  public final MaterialCardView tuitionMeterCard;

  @NonNull
  public final ProgressBar tuitionProgressBar;

  @NonNull
  public final TextView tuitionWarningText;

  @NonNull
  public final TextView winAmountText;

  private ActivityGameBinding(@NonNull FrameLayout rootView, @NonNull ImageButton backButton,
      @NonNull MaterialButton bet10mButton, @NonNull MaterialButton bet1mButton,
      @NonNull MaterialButton bet5mButton, @NonNull MaterialButton betAllinButton,
      @NonNull EditText betAmountInput, @NonNull LinearLayout betInfoContainer,
      @NonNull LinearLayout bettingControls, @NonNull RecyclerView botLeaderboardRecycler,
      @NonNull CardView bottomHud, @NonNull MaterialButton cashoutButton,
      @NonNull ImageButton collapseLeaderboardButton, @NonNull TextView crashPointText,
      @NonNull TextView currentBetText, @NonNull LinearLayout educationalIndicators,
      @NonNull TextView enrollmentCountdownText, @NonNull MaterialCardView enrollmentDeadlineCard,
      @NonNull ConstraintLayout gameArea, @NonNull LinearLayout gameControls,
      @NonNull TextView gameStatus, @NonNull GameView gameView, @NonNull CardView leaderboardCard,
      @NonNull TextView multiplierText, @NonNull MaterialButton nextRoundButton,
      @NonNull MaterialButton placeBetButton, @NonNull CardView statusCard,
      @NonNull CardView topHud, @NonNull TextView totalLossText,
      @NonNull TextView tuitionAmountText, @NonNull MaterialCardView tuitionMeterCard,
      @NonNull ProgressBar tuitionProgressBar, @NonNull TextView tuitionWarningText,
      @NonNull TextView winAmountText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bet10mButton = bet10mButton;
    this.bet1mButton = bet1mButton;
    this.bet5mButton = bet5mButton;
    this.betAllinButton = betAllinButton;
    this.betAmountInput = betAmountInput;
    this.betInfoContainer = betInfoContainer;
    this.bettingControls = bettingControls;
    this.botLeaderboardRecycler = botLeaderboardRecycler;
    this.bottomHud = bottomHud;
    this.cashoutButton = cashoutButton;
    this.collapseLeaderboardButton = collapseLeaderboardButton;
    this.crashPointText = crashPointText;
    this.currentBetText = currentBetText;
    this.educationalIndicators = educationalIndicators;
    this.enrollmentCountdownText = enrollmentCountdownText;
    this.enrollmentDeadlineCard = enrollmentDeadlineCard;
    this.gameArea = gameArea;
    this.gameControls = gameControls;
    this.gameStatus = gameStatus;
    this.gameView = gameView;
    this.leaderboardCard = leaderboardCard;
    this.multiplierText = multiplierText;
    this.nextRoundButton = nextRoundButton;
    this.placeBetButton = placeBetButton;
    this.statusCard = statusCard;
    this.topHud = topHud;
    this.totalLossText = totalLossText;
    this.tuitionAmountText = tuitionAmountText;
    this.tuitionMeterCard = tuitionMeterCard;
    this.tuitionProgressBar = tuitionProgressBar;
    this.tuitionWarningText = tuitionWarningText;
    this.winAmountText = winAmountText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bet_10m_button;
      MaterialButton bet10mButton = ViewBindings.findChildViewById(rootView, id);
      if (bet10mButton == null) {
        break missingId;
      }

      id = R.id.bet_1m_button;
      MaterialButton bet1mButton = ViewBindings.findChildViewById(rootView, id);
      if (bet1mButton == null) {
        break missingId;
      }

      id = R.id.bet_5m_button;
      MaterialButton bet5mButton = ViewBindings.findChildViewById(rootView, id);
      if (bet5mButton == null) {
        break missingId;
      }

      id = R.id.bet_allin_button;
      MaterialButton betAllinButton = ViewBindings.findChildViewById(rootView, id);
      if (betAllinButton == null) {
        break missingId;
      }

      id = R.id.bet_amount_input;
      EditText betAmountInput = ViewBindings.findChildViewById(rootView, id);
      if (betAmountInput == null) {
        break missingId;
      }

      id = R.id.bet_info_container;
      LinearLayout betInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (betInfoContainer == null) {
        break missingId;
      }

      id = R.id.betting_controls;
      LinearLayout bettingControls = ViewBindings.findChildViewById(rootView, id);
      if (bettingControls == null) {
        break missingId;
      }

      id = R.id.bot_leaderboard_recycler;
      RecyclerView botLeaderboardRecycler = ViewBindings.findChildViewById(rootView, id);
      if (botLeaderboardRecycler == null) {
        break missingId;
      }

      id = R.id.bottom_hud;
      CardView bottomHud = ViewBindings.findChildViewById(rootView, id);
      if (bottomHud == null) {
        break missingId;
      }

      id = R.id.cashout_button;
      MaterialButton cashoutButton = ViewBindings.findChildViewById(rootView, id);
      if (cashoutButton == null) {
        break missingId;
      }

      id = R.id.collapse_leaderboard_button;
      ImageButton collapseLeaderboardButton = ViewBindings.findChildViewById(rootView, id);
      if (collapseLeaderboardButton == null) {
        break missingId;
      }

      id = R.id.crash_point_text;
      TextView crashPointText = ViewBindings.findChildViewById(rootView, id);
      if (crashPointText == null) {
        break missingId;
      }

      id = R.id.current_bet_text;
      TextView currentBetText = ViewBindings.findChildViewById(rootView, id);
      if (currentBetText == null) {
        break missingId;
      }

      id = R.id.educational_indicators;
      LinearLayout educationalIndicators = ViewBindings.findChildViewById(rootView, id);
      if (educationalIndicators == null) {
        break missingId;
      }

      id = R.id.enrollment_countdown_text;
      TextView enrollmentCountdownText = ViewBindings.findChildViewById(rootView, id);
      if (enrollmentCountdownText == null) {
        break missingId;
      }

      id = R.id.enrollment_deadline_card;
      MaterialCardView enrollmentDeadlineCard = ViewBindings.findChildViewById(rootView, id);
      if (enrollmentDeadlineCard == null) {
        break missingId;
      }

      id = R.id.game_area;
      ConstraintLayout gameArea = ViewBindings.findChildViewById(rootView, id);
      if (gameArea == null) {
        break missingId;
      }

      id = R.id.game_controls;
      LinearLayout gameControls = ViewBindings.findChildViewById(rootView, id);
      if (gameControls == null) {
        break missingId;
      }

      id = R.id.game_status;
      TextView gameStatus = ViewBindings.findChildViewById(rootView, id);
      if (gameStatus == null) {
        break missingId;
      }

      id = R.id.game_view;
      GameView gameView = ViewBindings.findChildViewById(rootView, id);
      if (gameView == null) {
        break missingId;
      }

      id = R.id.leaderboard_card;
      CardView leaderboardCard = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardCard == null) {
        break missingId;
      }

      id = R.id.multiplier_text;
      TextView multiplierText = ViewBindings.findChildViewById(rootView, id);
      if (multiplierText == null) {
        break missingId;
      }

      id = R.id.next_round_button;
      MaterialButton nextRoundButton = ViewBindings.findChildViewById(rootView, id);
      if (nextRoundButton == null) {
        break missingId;
      }

      id = R.id.place_bet_button;
      MaterialButton placeBetButton = ViewBindings.findChildViewById(rootView, id);
      if (placeBetButton == null) {
        break missingId;
      }

      id = R.id.status_card;
      CardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.top_hud;
      CardView topHud = ViewBindings.findChildViewById(rootView, id);
      if (topHud == null) {
        break missingId;
      }

      id = R.id.total_loss_text;
      TextView totalLossText = ViewBindings.findChildViewById(rootView, id);
      if (totalLossText == null) {
        break missingId;
      }

      id = R.id.tuition_amount_text;
      TextView tuitionAmountText = ViewBindings.findChildViewById(rootView, id);
      if (tuitionAmountText == null) {
        break missingId;
      }

      id = R.id.tuition_meter_card;
      MaterialCardView tuitionMeterCard = ViewBindings.findChildViewById(rootView, id);
      if (tuitionMeterCard == null) {
        break missingId;
      }

      id = R.id.tuition_progress_bar;
      ProgressBar tuitionProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (tuitionProgressBar == null) {
        break missingId;
      }

      id = R.id.tuition_warning_text;
      TextView tuitionWarningText = ViewBindings.findChildViewById(rootView, id);
      if (tuitionWarningText == null) {
        break missingId;
      }

      id = R.id.win_amount_text;
      TextView winAmountText = ViewBindings.findChildViewById(rootView, id);
      if (winAmountText == null) {
        break missingId;
      }

      return new ActivityGameBinding((FrameLayout) rootView, backButton, bet10mButton, bet1mButton,
          bet5mButton, betAllinButton, betAmountInput, betInfoContainer, bettingControls,
          botLeaderboardRecycler, bottomHud, cashoutButton, collapseLeaderboardButton,
          crashPointText, currentBetText, educationalIndicators, enrollmentCountdownText,
          enrollmentDeadlineCard, gameArea, gameControls, gameStatus, gameView, leaderboardCard,
          multiplierText, nextRoundButton, placeBetButton, statusCard, topHud, totalLossText,
          tuitionAmountText, tuitionMeterCard, tuitionProgressBar, tuitionWarningText,
          winAmountText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
