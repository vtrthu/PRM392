// Generated by view binder compiler. Do not edit!
package com.example.aviatorcrash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aviatorcrash.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton backToLoginButton;

  @NonNull
  public final EditText confirmPasswordInput;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final EditText passwordInput;

  @NonNull
  public final MaterialButton registerButton;

  @NonNull
  public final CardView registerCard;

  @NonNull
  public final EditText usernameInput;

  private ActivityRegisterBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton backToLoginButton, @NonNull EditText confirmPasswordInput,
      @NonNull LinearLayout header, @NonNull EditText passwordInput,
      @NonNull MaterialButton registerButton, @NonNull CardView registerCard,
      @NonNull EditText usernameInput) {
    this.rootView = rootView;
    this.backToLoginButton = backToLoginButton;
    this.confirmPasswordInput = confirmPasswordInput;
    this.header = header;
    this.passwordInput = passwordInput;
    this.registerButton = registerButton;
    this.registerCard = registerCard;
    this.usernameInput = usernameInput;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_to_login_button;
      MaterialButton backToLoginButton = ViewBindings.findChildViewById(rootView, id);
      if (backToLoginButton == null) {
        break missingId;
      }

      id = R.id.confirm_password_input;
      EditText confirmPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordInput == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.password_input;
      EditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.register_button;
      MaterialButton registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.register_card;
      CardView registerCard = ViewBindings.findChildViewById(rootView, id);
      if (registerCard == null) {
        break missingId;
      }

      id = R.id.username_input;
      EditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, backToLoginButton,
          confirmPasswordInput, header, passwordInput, registerButton, registerCard, usernameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
