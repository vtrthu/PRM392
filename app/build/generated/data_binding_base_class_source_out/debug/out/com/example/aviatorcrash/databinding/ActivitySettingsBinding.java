// Generated by view binder compiler. Do not edit!
package com.example.aviatorcrash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aviatorcrash.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.slider.Slider;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final Slider autoCashoutSlider;

  @NonNull
  public final SwitchMaterial autoCashoutSwitch;

  @NonNull
  public final TextView autoCashoutValue;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextView currentBalanceText;

  @NonNull
  public final MaterialButton hiddenLogoutButton;

  @NonNull
  public final MaterialButton resetBalanceButton;

  @NonNull
  public final Toolbar toolbar;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull Slider autoCashoutSlider, @NonNull SwitchMaterial autoCashoutSwitch,
      @NonNull TextView autoCashoutValue, @NonNull ImageButton backButton,
      @NonNull TextView currentBalanceText, @NonNull MaterialButton hiddenLogoutButton,
      @NonNull MaterialButton resetBalanceButton, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.autoCashoutSlider = autoCashoutSlider;
    this.autoCashoutSwitch = autoCashoutSwitch;
    this.autoCashoutValue = autoCashoutValue;
    this.backButton = backButton;
    this.currentBalanceText = currentBalanceText;
    this.hiddenLogoutButton = hiddenLogoutButton;
    this.resetBalanceButton = resetBalanceButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.auto_cashout_slider;
      Slider autoCashoutSlider = ViewBindings.findChildViewById(rootView, id);
      if (autoCashoutSlider == null) {
        break missingId;
      }

      id = R.id.auto_cashout_switch;
      SwitchMaterial autoCashoutSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoCashoutSwitch == null) {
        break missingId;
      }

      id = R.id.auto_cashout_value;
      TextView autoCashoutValue = ViewBindings.findChildViewById(rootView, id);
      if (autoCashoutValue == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.current_balance_text;
      TextView currentBalanceText = ViewBindings.findChildViewById(rootView, id);
      if (currentBalanceText == null) {
        break missingId;
      }

      id = R.id.hidden_logout_button;
      MaterialButton hiddenLogoutButton = ViewBindings.findChildViewById(rootView, id);
      if (hiddenLogoutButton == null) {
        break missingId;
      }

      id = R.id.reset_balance_button;
      MaterialButton resetBalanceButton = ViewBindings.findChildViewById(rootView, id);
      if (resetBalanceButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, appBar, autoCashoutSlider,
          autoCashoutSwitch, autoCashoutValue, backButton, currentBalanceText, hiddenLogoutButton,
          resetBalanceButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
